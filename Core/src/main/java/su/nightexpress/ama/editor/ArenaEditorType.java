package su.nightexpress.ama.editor;

import org.bukkit.Material;
import org.jetbrains.annotations.NotNull;
import su.nexmedia.engine.api.editor.EditorButtonType;
import su.nexmedia.engine.utils.StringUtil;
import su.nightexpress.ama.Placeholders;
import su.nightexpress.ama.hook.HookId;

import java.util.ArrayList;
import java.util.List;

public enum ArenaEditorType implements EditorButtonType {

    EDITOR_ARENA(Material.MAP, "Arena Editor",
        EditorButtonType.info("There you can create and configure your arenas."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    EDITOR_KITS(Material.ARMOR_STAND, "Kit Editor",
        EditorButtonType.info("There you can create and configure arena kits."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    EDITOR_MOBS(Material.ZOMBIE_HEAD, "Mob Editor",
        EditorButtonType.info("There you can create and configure arena mobs."),
        EditorButtonType.click("Left-Click to &fNavigate")),

    ARENA_OBJECT(Material.MAP, "&6" + Placeholders.ARENA_NAME + " &7(&f" + Placeholders.ARENA_ID + "&7)",
        EditorButtonType.info("Arena Enabled: &f" + Placeholders.ARENA_ACTIVE),
        EditorButtonType.warn("Please ensure there are no problems with the arena:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fDelete &7(No Undo)")),
    ARENA_CREATE(Material.ANVIL, "Create an Arena",
        EditorButtonType.info("Creates a new arena config."),
        EditorButtonType.click("Left-Click to &fCreate")),
    ARENA_CHANGE_ACTIVE(Material.REPEATER, "Arena Active",
        EditorButtonType.current("Arena Enabled: &f" + Placeholders.ARENA_ACTIVE),
        EditorButtonType.info("Enables/Disables the arena."),
        EditorButtonType.warn("Please ensure there are no problems with the arena:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fToggle")),
    ARENA_CHANGE_NAME(Material.NAME_TAG, "Arena Display Name",
        EditorButtonType.current(Placeholders.ARENA_NAME),
        EditorButtonType.info("Sets the arena display name. This name is used in messages, GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fEdit")),
    ARENA_SETUP_KIT(Material.GOLDEN_AXE, "Arena Setup Kit",
        EditorButtonType.info("A set of tools to setup the arena playground."),
        EditorButtonType.click("Left-Click to &fGet Kit")),
    ARENA_AUTO_STATE_SCHEDULERS(Material.CLOCK, "Arena Auto State Schedulers",
        EditorButtonType.current("Open Times:\n" + Placeholders.ARENA_AUTO_STATE_OPEN_TIMES + "\nClose Times:\n" + Placeholders.ARENA_AUTO_STATE_CLOSE_TIMES),
        EditorButtonType.info("This setting allows you to setup automatic arena opening/closing at certain day times."),
        EditorButtonType.note("Arena will stay enabled/disabled until the next scheduler trigger!"),
        EditorButtonType.click("Left-Click to &fAdd Open Time\nRight-Click to &fAdd Close Time\nShift-Left to &fClear Open Times\nShift-Right to &fClear Close Times")),
    ARENA_AUTO_STATE_SCHEDULERS_ADD_OPEN,
    ARENA_AUTO_STATE_SCHEDULERS_ADD_CLOSE,
    ARENA_OPEN_GAMEPLAY_MANAGER(Material.EXPERIENCE_BOTTLE, "Arena Gameplay Manager",
        EditorButtonType.info("A set of the arena gameplay features and options."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),
    ARENA_OPEN_WAVE_MANAGER(Material.BLAZE_POWDER, "Arena Wave Manager",
        EditorButtonType.info("A list of all the arena waves to use and spawn in the arena regions. There you only create wave configurations."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),
    ARENA_OPEN_REGION_MANAGER(Material.COMPASS, "Arena Region Manager",
        EditorButtonType.info("A list of all the arena regions. There you create arena playable zones and configure waves spawn."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),
    ARENA_OPEN_REWARD_MANAGER(Material.GOLD_INGOT, "Arena Reward Manager",
        EditorButtonType.info("A list of all the arena rewards. There you create and configure rewards for playing on the arena."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),
    ARENA_OPEN_SHOP_MANAGER(Material.EMERALD, "Arena Shop Manager",
        EditorButtonType.info("Arena in-game shop. There you can create and configure shop products and categories."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),
    ARENA_OPEN_SPOT_MANAGER(Material.REDSTONE, "Arena Spot Manager",
        EditorButtonType.info("A list of all the arena spots. There you can create special zones, that will be changed during the game. It could be openable doors or gates, landscape changing, etc."),
        EditorButtonType.warn("Please ensure there are no problems:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fNavigate")),

    ARENA_CHANGE_REQUIREMENT_PERMISSION(Material.REDSTONE_TORCH, "Join Permission Requirement",
        EditorButtonType.current("Required: &f" + Placeholders.ARENA_REQUIREMENT_PERMISSION + "\nNode: &f" + Placeholders.ARENA_PERMISSION),
        EditorButtonType.info("Sets permission requirement to be able to join the arena."),
        EditorButtonType.click("Left-Click to &fToggle")),
    ARENA_CHANGE_REQUIREMENT_PAYMENT(Material.GOLD_NUGGET, "Join Payment Requirement",
        EditorButtonType.current(Placeholders.ARENA_REQUIREMENT_PAYMENT),
        EditorButtonType.info("Sets payments to join the arena."),
        EditorButtonType.click("Left-Click to &fAdd/Edit\nRight-Click to &fClear/Disable")),
    ARENA_CHANGE_REQUIREMENT_LEVEL(Material.ENCHANTING_TABLE, "Join Level Requirement",
        EditorButtonType.current(Placeholders.ARENA_REQUIREMENT_LEVEL),
        EditorButtonType.info("Sets level requirements to join the arena."),
        EditorButtonType.note("Supported plugins:\n&f" + HookId.MMOCORE),
        EditorButtonType.click("Left-Click to &fAdd/Edit\nRight-Click to &fClear/Disable")),

    REGION_OBJECT(Material.OAK_FENCE, "Region: &6" + Placeholders.REGION_NAME + " &7(&f" + Placeholders.REGION_ID + "&7)",
        EditorButtonType.info("Enabled: &f" + Placeholders.REGION_ACTIVE + "\nIs Default: &f" + Placeholders.REGION_DEFAULT),
        EditorButtonType.warn("Please ensure there are no problems with the region:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    REGION_CREATE(Material.ANVIL, "Create a Region",
        EditorButtonType.info("Creates a new arena region."),
        EditorButtonType.click("Left-Click to &fCreate")),
    REGION_OPEN_CONTAINERS(Material.CHEST, "Region Containers",
        EditorButtonType.info("A list of all the region containers.\nContainers are chests where you can generate different items during the game on certain events."),
        EditorButtonType.note("To be able to configure them, you have to create (place) them using the Region Setup Kit first."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    REGION_OPEN_WAVES(Material.BLAZE_POWDER, "Region Waves",
        EditorButtonType.info("A list of all the region waves.\nRegion Waves is the actual mob waves, that will be spawned during the game on certain events."),
        EditorButtonType.note("To be able to configure them, you have to create wave configs in the Arena Waves Manager first."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    REGION_SETUP_KIT(Material.GOLDEN_AXE, "Region Setup Kit",
        EditorButtonType.info("A set of tools to setup the region playground."),
        EditorButtonType.click("Left-Click to &fGet Kit")),
    REGION_CHANGE_ACTIVE(Material.REPEATER, "Region Active",
        EditorButtonType.current("Enabled: &f" + Placeholders.REGION_ACTIVE),
        EditorButtonType.info("Enables/Disables the region."),
        EditorButtonType.warn("Please ensure there are no problems with the region:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fToggle")),
    REGION_CHANGE_DEFAULT(Material.GRASS_BLOCK, "Region Default",
        EditorButtonType.current("Is Default: &f" + Placeholders.REGION_DEFAULT),
        EditorButtonType.info("Sets the region as default arena region.\nDefault region is the first place, where players will be spawned, and the first wave will be spawned."),
        EditorButtonType.click("Left-Click to &fToggle")),
    REGION_CHANGE_LINKED(Material.STRING, "Linked Regions",
        EditorButtonType.current("Linked Regions:\n&a" + Placeholders.REGION_LINKED_REGIONS),
        EditorButtonType.info("A list of regions that are linked with the current region. Mobs in THIS region will be spawned as long as there are players in any of linked regions."),
        EditorButtonType.click("Left-Click to &fAdd Region\nRight-Click to &fClear List")),
    REGION_CHANGE_NAME(Material.NAME_TAG, "Region Name",
        EditorButtonType.current(Placeholders.REGION_NAME),
        EditorButtonType.info("Sets the region display name. This name is used in messages, GUIs and holograms."),
        EditorButtonType.click("Left-Click to &fEdit")),
    REGION_CHANGE_TRIGGERS_LOCKED(Material.CLOCK, "Region Lock Triggers",
        EditorButtonType.current(Placeholders.REGION_TRIGGERS_LOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the region will be locked.\nLocked regions are not available to play and no mobs spawns there."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    REGION_CHANGE_TRIGGERS_UNLOCKED(Material.CLOCK, "Region Unlock Triggers",
        EditorButtonType.current(Placeholders.REGION_TRIGGERS_UNLOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the region will be unlocked.\nUnlocked regions are available to play and mobs spawn."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    REGION_CONTAINER_OBJECT(Material.CHEST, "Container",
        EditorButtonType.info("Location: &ax: " + Placeholders.CONTAINER_LOCATION_X + "&7, &ay: " + Placeholders.CONTAINER_LOCATION_Y + "&7, &az: " + Placeholders.CONTAINER_LOCATION_Z + "&7 in &a" + Placeholders.CONTAINER_LOCATION_WORLD),
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fTeleport\nShift-Right to &fDelete &7(No Undo)")),
    REGION_CONTAINER_CHANGE_ITEMS(Material.CHEST, "Items Content",
        EditorButtonType.info("A list of items that will be used on container refill."),
        EditorButtonType.note("Simply put items there and use ESC to save & return."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    REGION_CONTAINER_CHANGE_REFILL_TRIGGERS(Material.CLOCK, "Refill Game Triggers",
        EditorButtonType.current(Placeholders.CONTAINER_TRIGGERS),
        EditorButtonType.info("A list of Game Triggers (Events) when items in this container will be refreshed."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    REGION_CONTAINER_CHANGE_REFILL_AMOUNT(Material.COMPARATOR, "Refill Items Amount",
        EditorButtonType.current("Min: &f" + Placeholders.CONTAINER_REFILL_ITEMS_MIN + "\nMax: &f" + Placeholders.CONTAINER_REFILL_ITEMS_MAX),
        EditorButtonType.info("Sets how many items will be added to this container on refill."),
        EditorButtonType.note("When container is about to be refilled, all previous content will be wiped!"),
        EditorButtonType.click("Left-Click to &fChange Min\nRight-Click to &fChange Max")),
    REGION_CONTAINER_CHANGE_REFILL_AMOUNT_MIN,
    REGION_CONTAINER_CHANGE_REFILL_AMOUNT_MAX,
    REGION_WAVE_OBJECT(Material.BLAZE_POWDER, "Wave: &6" + Placeholders.REGION_WAVE_ID,
        EditorButtonType.info("Contains Arena Waves:\n&a" + Placeholders.REGION_WAVE_WAVE_IDS),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    REGION_WAVE_CREATE(Material.ANVIL, "Create Region Wave",
        EditorButtonType.info("Creates a new region wave."),
        EditorButtonType.click("Left-Click to &fCreate")),
    REGION_WAVE_CHANGE_ID(Material.MAP, "Arena Wave Ids",
        EditorButtonType.current(Placeholders.REGION_WAVE_WAVE_IDS),
        EditorButtonType.info("A list of Arena Wave identifiers, that will be used to spawn mobs from.\n&7\nIt will spawn all mobs from specified wave with respect of wave amplificator settings."),
        EditorButtonType.note("To be able to add wave identifiers here, you have to create them in the Arena Wave Manager first."),
        EditorButtonType.note("If you set multiple identifiers, only one of them will be randomly selected and spawned."),
        EditorButtonType.click("Left-Click to &fAdd Wave Id\nRight-Click to &fClear List")),
    REGION_WAVE_CHANGE_SPAWNERS(Material.SPAWNER, "Wave Spawners",
        EditorButtonType.current(Placeholders.REGION_WAVE_SPAWNERS),
        EditorButtonType.info("A list of spawners, where mobs from this wave will be spawned."),
        EditorButtonType.note("To be able to add spawners here, you have to create them using the Region Setup Kit first."),
        EditorButtonType.note("You can use asterisk (*) to include all the region spawners"),
        EditorButtonType.click("Left-Click to &fAdd Spawner\nRight-Click to &fClear List")),
    REGION_WAVE_CHANGE_SPAWNERS_ADD,
    REGION_WAVE_CHANGE_TRIGGERS(Material.CLOCK, "Spawn Game Triggers",
        EditorButtonType.current(Placeholders.REGION_WAVE_TRIGGERS),
        EditorButtonType.info("A list of Game Triggers (Events) when this wave will spawn mobs in the region."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),

    GAMEPLAY_CHANGE_TIMELEFT(Material.CLOCK, "Game Timeleft",
        EditorButtonType.current(Placeholders.GAMEPLAY_TIMELEFT + " min."),
        EditorButtonType.info("Sets the time at the end of which a game will be stopped and lost for players, if they didn't reach the final wave."),
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fDisable")),
    GAMEPLAY_CHANGE_LOBBY_TIME(Material.REPEATER, "Lobby Time",
        EditorButtonType.current(Placeholders.GAMEPLAY_LOBBY_TIME + " sec."),
        EditorButtonType.info("Sets the lobby timer at the end of which a game will be started."),
        EditorButtonType.click("Left-Click to &fEdit")),
    GAMEPLAY_CHANGE_ANNOUNCES(Material.ENDER_EYE, "Announcements",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_ANNOUNCEMENTS),
        EditorButtonType.info("Enables server-wide announcements when arena is about to start/end."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_CHANGE_SCOREBOARD(Material.PAINTING, "Scoreboard",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_SCOREBOARD_ENABLED + "\nScoreboard Id: &f" + Placeholders.GAMEPLAY_SCOREBOARD_ID),
        EditorButtonType.info("Sets and enables specified scoreboard for the arena."),
        EditorButtonType.note("You must have " + HookId.PROTOCOL_LIB + " installed!"),
        EditorButtonType.click("Left-Click to &fToggle\nRight-Click to &fChange Id")),
    GAMEPLAY_CHANGE_SCOREBOARD_ID,
    GAMEPLAY_CHANGE_HUNGER(Material.ROTTEN_FLESH, "Natural Hunger",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_HUNGER_ENABLED),
        EditorButtonType.info("Enables natural hunger mechanic for players."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_CHANGE_REGENERATION(Material.GOLDEN_APPLE, "Natural Regeneration",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_REGENERATION_ENABLED),
        EditorButtonType.info("Enables natural health regeneration for players."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_CHANGE_ITEM(Material.WOODEN_AXE, "Player Item Settings",
        EditorButtonType.current("Drop Allowed: &f" + Placeholders.GAMEPLAY_ITEM_DROP_ENABLED + "\nPickup Allowed: &f" + Placeholders.GAMEPLAY_ITEM_PICKUP_ENABLED + "\nDurability Enabled: &f" + Placeholders.GAMEPLAY_ITEM_DURABULITY_ENABLED),
        EditorButtonType.info("Allows players to pickup and drop items on the arena. Enables vanilla item durability mechanic."),
        EditorButtonType.click("Left-Click to &fToggle Drop\nRight-Click to &fToggle Pickup\nShift-Left tp &fToggle Durability")),
    GAMEPLAY_CHANGE_MOB_HIGHLIGHT(Material.GLOWSTONE, "Mobs Highlight",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_MOB_HIGHLIGHT_ENABLED + "\nFor Amount: &f" + Placeholders.GAMEPLAY_MOB_HIGHLIGHT_AMOUNT + "%\nColor: &f" + Placeholders.GAMEPLAY_MOB_HIGHLIGHT_COLOR),
        EditorButtonType.info("Enables mob's model highlighting (glowing) when amount of alive mobs is less or equal to specified value."),
        EditorButtonType.note("Due to game limitations, set of colors is limited and can not be really customized."),
        EditorButtonType.click("Left-Click to &fToggle\nRight-Click to &fChange Amount\nShift-Left to &fToggle Color")),
    GAMEPLAY_CHANGE_MOB_HIGHLIGHT_AMOUNT,
    GAMEPLAY_CHANGE_MOB_DROP(Material.GUNPOWDER, "Mob Drops",
        EditorButtonType.current("Items: &f" + Placeholders.GAMEPLAY_MOB_DROP_ITEMS + "\nExp: &f" + Placeholders.GAMEPLAY_MOB_DROP_EXP),
        EditorButtonType.info("Enables mob items and exp drop on death."),
        EditorButtonType.click("Left-Click to &fToggle Items\nRight-Click to &fToggle Exp")),
    GAMEPLAY_CHANGE_BANNED_ITEMS(Material.BARRIER, "Banned Items",
        EditorButtonType.current(Placeholders.GAMEPLAY_BANNED_ITEMS),
        EditorButtonType.info("A list of items that can not be used on the arena."),
        EditorButtonType.click("Left-Click to &fAdd Item\nRight-Click to &fClear List")),
    GAMEPLAY_CHANGE_ALLOWED_SPAWN_REASONS(Material.CREEPER_SPAWN_EGG, "Entity Spawn Reasons",
        EditorButtonType.current(Placeholders.GAMEPLAY_ALLOWED_SPAWN_REASONS),
        EditorButtonType.info("A list of Spawn Reasons that will be allowed to spawn entities in the arena. This option can be useful when using third-party plugins that can summon custom mobs."),
        EditorButtonType.click("Left-Click to &fAdd Reason\nRight-Click to &fClear List")),
    GAMEPLAY_CHANGE_PLAYERS_AMOUNT(Material.PLAYER_HEAD, "Players Amount",
        EditorButtonType.current("Min: &f" + Placeholders.GAMEPLAY_PLAYERS_AMOUNT_MIN + "\nMax: &f" + Placeholders.GAMEPLAY_PLAYERS_AMOUNT_MAX),
        EditorButtonType.info("Sets minimal and maximal amount of players to play on the arena."),
        EditorButtonType.click("Left-Click to &fChange Min\nRight-Click to &fChange Max")),
    GAMEPLAY_CHANGE_PLAYERS_AMOUNT_MIN,
    GAMEPLAY_CHANGE_PLAYERS_AMOUNT_MAX,
    GAMEPLAY_CHANGE_PLAYERS_DEATH(Material.BONE_MEAL, "Player Death Settings",
        EditorButtonType.current("Drop Items: &f" + Placeholders.GAMEPLAY_PLAYER_DEATH_DROP_ITEMS + "\nLives Amount: &f" + Placeholders.GAMEPLAY_PLAYER_DEATH_LIVES_AMOUNT),
        EditorButtonType.info("Enables item drop on player death. Sets how many lives a player will have.\nAmount of lives defines how many times player can die on the arena before being kicked."),
        EditorButtonType.click("Left-Click to &fToggle Drop\nRight-Click to &fChange Lives")),
    GAMEPLAY_CHANGE_PLAYERS_DEATH_LIVES,
    GAMEPLAY_CHANGE_SPECTATE(Material.SKELETON_SKULL, "Spectate Settings",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_SPECTATE_ENABLED + "\nOn Death: &f" + Placeholders.GAMEPLAY_SPECTATE_ON_DEATH),
        EditorButtonType.info("Enables spectate feature for the arena. Sets if player will be auto moved to spectate location on death."),
        EditorButtonType.click("Left-Click to &fToggle Spectate\nRight-Click to &fToggle On Death")),
    GAMEPLAY_CHANGE_COMMANDS(Material.COMMAND_BLOCK, "Commands Usage",
        EditorButtonType.current("Allowed: &f" + Placeholders.GAMEPLAY_COMMAND_USAGE_ENABLED + "\nWhiteList:\n" + Placeholders.GAMEPLAY_COMMAND_USAGE_WHITELIST),
        EditorButtonType.info("Enables external (non-arena) commands usage on the arena. Or sets a list of commands, allowed for usage on the arena."),
        EditorButtonType.click("Left-Click to &fToggle\nShift-Left to &fAdd Command\nShift-Right to &fClear List")),
    GAMEPLAY_CHANGE_COMMANDS_ADD_WHITE,
    GAMEPLAY_CHANGE_KITS(Material.DIAMOND_CHESTPLATE, "Kits Usage",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_KITS_ENABLED + "\nAllowed Kits:\n" + Placeholders.GAMEPLAY_KITS_ALLOWED),
        EditorButtonType.info("Enables kits usage on the arena. Sets a list of kits available to use on this arena."),
        EditorButtonType.click("Left-Click to &fToggle\nShift-Left to &fAdd Kit\nShift-Right to &fClear List")),
    GAMEPLAY_CHANGE_KITS_LIMITS(Material.COMPARATOR, "Kits Limits",
        EditorButtonType.current(Placeholders.GAMEPLAY_KITS_LIMITS),
        EditorButtonType.info("Sets how many players on the arena can use the same kit.\nSet -1 for unlimited usage."),
        EditorButtonType.click("Left-Click to &fAdd Limit\nRight-Click to &fClear List")),
    GAMEPLAY_CHANGE_KITS_ADD_ALLOWED,
    GAMEPLAY_CHANGE_KITS_ADD_LIMIT,
    GAMEPLAY_CHANGE_PETS_ALLOWED(Material.BONE, "Player Pets",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_PETS_ALLOWED),
        EditorButtonType.info("Allows players to bring their pets on the arena."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_CHANGE_MCMMO_ALLOWED(Material.DIAMOND_SWORD, "mcMMO",
        EditorButtonType.current("Enabled: &f" + Placeholders.GAMEPLAY_MCMMO_ALLOWED),
        EditorButtonType.info("Allows players to use mcMMO abilities on the arena."),
        EditorButtonType.note("This option has effect only if you have mcMMO installed."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_CHANGE_AUTO_COMMANDS(Material.DAYLIGHT_DETECTOR, "Auto-Commands",
        EditorButtonType.info("There you can create and configure commands, that will be executed during the game on certain events."),
        EditorButtonType.click("Left-Click to &fNavigate")),

    GAMEPLAY_AUTO_COMMAND_OBJECT(Material.COMMAND_BLOCK, "Auto-Command",
        EditorButtonType.info("Target: &f" + Placeholders.GAME_COMMAND_TARGET + "\nGame Triggers:\n" + Placeholders.GAME_COMMAND_TRIGGERS),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    GAMEPLAY_AUTO_COMMAND_CREATE(Material.ANVIL, "Create an Auto-Command",
        EditorButtonType.info("Create a new auto-command executor."),
        EditorButtonType.click("Left-Click to &fCreate")),
    GAMEPLAY_AUTO_COMMAND_CHANGE_TRIGGERS(Material.CLOCK, "Game Triggers",
        EditorButtonType.current(Placeholders.GAME_COMMAND_TRIGGERS),
        EditorButtonType.info("A list of Game Triggers (Events) when these commands will be executed."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    GAMEPLAY_AUTO_COMMAND_CHANGE_TARGET_TYPE(Material.ARMOR_STAND, "Target Type",
        EditorButtonType.current(Placeholders.GAME_COMMAND_TARGET),
        EditorButtonType.info("Sets the Target Type for these commands. Depends on a Target Type, a different player(s) will be affected by it."),
        EditorButtonType.note("Set to GLOBAL to execute commands by server console."),
        EditorButtonType.click("Left-Click to &fToggle")),
    GAMEPLAY_AUTO_COMMAND_CHANGE_COMMANDS(Material.MAP, "Commands",
        EditorButtonType.current(Placeholders.GAME_COMMAND_COMMANDS),
        EditorButtonType.info("A list of commands that will be executed."),
        EditorButtonType.note("For player-targetted commands you can use PlaceholderAPI and Player placeholders from NexEngine."),
        EditorButtonType.click("Left-Click to &fAdd Command\nRight-Click to &fClear List")),

    WAVES_CHANGE_DELAY(Material.CLOCK, "New Wave Timer",
        EditorButtonType.current("First: &f" + Placeholders.ARENA_WAVES_DELAY_FIRST + "\nDefault: &f" + Placeholders.ARENA_WAVES_DELAY_DEFAULT),
        EditorButtonType.info("Sets the time before the first one and other waves starts."),
        EditorButtonType.click("Left-Click to &fEdit First\nRight-Click to &fEdit Default")),
    WAVES_CHANGE_DELAY_FIRST,
    WAVES_CHANGE_DELAY_DEFAULT,
    WAVES_CHANGE_FINAL_WAVE(Material.IRON_DOOR, "Final Wave Number",
        EditorButtonType.current(Placeholders.ARENA_WAVES_FINAL_WAVE),
        EditorButtonType.info("Sets the final wave number. When the final wave is cleared, the game will be finished."),
        EditorButtonType.note("Set to -1 to disable final wave."),
        EditorButtonType.click("Left-Click to &fEdit")),
    WAVES_CHANGE_WAVES(Material.BLAZE_POWDER, "Waves",
        EditorButtonType.info("A list of all the arena waves. There you create and configure Arena Waves. These wave configurations are used in Arena Regions."),
        EditorButtonType.click("Click to &fNavigate")),
    WAVES_CHANGE_GRADUAL(Material.OAK_SAPLING, "Gradual Spawn Feature",
        EditorButtonType.info("A feature, that allows you to split amount of mobs spawned at the same time during the round."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    WAVES_CHANGE_AMPLIFIERS(Material.EXPERIENCE_BOTTLE, "Wave Amplifiers",
        EditorButtonType.info("Amplifiers are used to dynamically increase arena difficulty by incrementing mob levels and amount."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    WAVES_CHANGE_GRADUAL_ENABLED(Material.REPEATER, "Gradual Spawn Enabled",
        EditorButtonType.current("Enabled: &f" + Placeholders.ARENA_WAVES_GRADUAL_ENABLED),
        EditorButtonType.info("Enables the Gradual Spawn feature."),
        EditorButtonType.click("Left-Click to &fToggle")),
    WAVES_CHANGE_GRADUAL_FIRST_PERCENT(Material.MELON_SEEDS, "First Spawn Percent",
        EditorButtonType.current(Placeholders.ARENA_WAVES_GRADUAL_FIRST_PERCENT + "%"),
        EditorButtonType.info("Sets how many mobs (in percent of total) mobs will be spawned at the start of a round."),
        EditorButtonType.click("Left-Click to &fEdit")),
    WAVES_CHANGE_GRADUAL_NEXT_PERCENT(Material.PUMPKIN_SEEDS, "Next Spawn Percent",
        EditorButtonType.current(Placeholders.ARENA_WAVES_GRADUAL_NEXT_PERCENT + "%"),
        EditorButtonType.info("Sets how many mobs (in percent of total mobs) will be spawned during the round."),
        EditorButtonType.warn("Can not be greater than 'First Spawn Percent' value."),
        EditorButtonType.click("Left-Click to &fEdit")),
    WAVES_CHANGE_GRADUAL_NEXT_INTERVAL(Material.CLOCK, "Next Spawn Interval",
        EditorButtonType.current(Placeholders.ARENA_WAVES_GRADUAL_NEXT_INTERVAL),
        EditorButtonType.info("Sets how often (in seconds) arena will attempt to spawn next mob group."),
        EditorButtonType.click("Left-Click to &fEdit")),
    WAVES_CHANGE_GRADUAL_NEXT_KILL_PERCENT(Material.ROTTEN_FLESH, "Next Spawn for Killed Percent",
        EditorButtonType.current(Placeholders.ARENA_WAVES_GRADUAL_NEXT_KILL_PERCENT + "%"),
        EditorButtonType.info("Sets how many mobs (in percent of total mobs) have to be killed, before a new mob group will be prepared to spawn."),
        EditorButtonType.note("You can set this value to zero. Then new mob groups will be spawned by specified interval no matter how many mobs are killed or alive."),
        EditorButtonType.warn("Can not be greater than 'Next Spawn Percent' value."),
        EditorButtonType.click("Left-Click to &fEdit")),
    WAVES_WAVE_OBJECT(Material.BLAZE_POWDER, "Wave: &6" + Placeholders.ARENA_WAVE_ID,
        EditorButtonType.info("Contains the following mobs:\n&a" + Placeholders.ARENA_WAVE_MOBS),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    WAVES_WAVE_CREATE(Material.ANVIL, "Create Wave",
        EditorButtonType.info("Creates a new Arena Wave configuration."),
        EditorButtonType.click("Left-Click to &fCreate")),
    WAVES_WAVE_CHANGE_MOBS(Material.CREEPER_SPAWN_EGG, "Wave Mobs",
        EditorButtonType.current(Placeholders.ARENA_WAVE_MOBS),
        EditorButtonType.info("A list of mobs contained in this wave. There you can add mobs that will be spawned by this wave."),
        EditorButtonType.note("To be able to add mobs there, you have to create them in the Mob Manager first."),
        EditorButtonType.note("However, you can use MythicMobs if you have it installed."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    WAVES_WAVE_CHANGE_AMPLIFIERS(Material.EXPERIENCE_BOTTLE, "Wave Amplifiers",
        EditorButtonType.current(Placeholders.ARENA_WAVE_AMPLIFIERS),
        EditorButtonType.info("A list of amplifiers to be applied to the wave mobs."),
        EditorButtonType.note("You can create amplifiers in the Wave Manager settings."),
        EditorButtonType.click("Left-Click to &fAdd Amplifier\nRight-Click to &fClear List")),
    WAVES_WAVE_MOB_OBJECT(Material.CREEPER_SPAWN_EGG, "Mob: &6" + Placeholders.ARENA_WAVE_MOB_ID,
        EditorButtonType.current("Provider: &f" + Placeholders.ARENA_WAVE_MOB_PROVIDER + "\nStart Amount: &f" + Placeholders.ARENA_WAVE_MOB_AMOUNT + "\nStart Level: &f" + Placeholders.ARENA_WAVE_MOB_LEVEL + "\nSpawn Chance: &f" + Placeholders.ARENA_WAVE_MOB_CHANCE + "%"),
        EditorButtonType.note("Mob level and amount can be adjusted by the Wave Amplificators."),
        EditorButtonType.click("Left-Click to &fChange Mob Type\nRight-Click to &fEdit Amount\nShift-Left to &fEdit Level\n[Q] Key to &fEdit Chance\n[F] Key to &fChange Provider\nShift-Right to &fDelete &7(No Undo)")),
    WAVES_WAVE_MOB_CREATE(Material.ANVIL, "Add Mob",
        EditorButtonType.info("Adds a new mob to the wave."),
        EditorButtonType.click("Left-Click to &fAdd")),
    WAVES_WAVE_MOB_CHANGE_PROVIDER,
    WAVES_WAVE_MOB_CHANGE_TYPE,
    WAVES_WAVE_MOB_CHANGE_AMOUNT,
    WAVES_WAVE_MOB_CHANGE_LEVEL,
    WAVES_WAVE_MOB_CHANGE_CHANCE,
    WAVES_WAVE_AMPLIFIER_OBJECT(Material.EXPERIENCE_BOTTLE, "Amplifier: &6" + Placeholders.WAVE_AMPLIFIER_ID,
        EditorButtonType.info("Mob Level: &f" + Placeholders.WAVE_AMPLIFIER_VALUE_LEVEL + "\nMob Amount: &f" + Placeholders.WAVE_AMPLIFIER_VALUE_AMOUNT + "\nGame Triggers:\n" + Placeholders.WAVE_AMPLIFIER_TRIGGERS),
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fDelete &7(No Undo)")),
    WAVES_WAVE_AMPLIFIER_CREATE(Material.ANVIL, "Create Amplificator",
        EditorButtonType.info("Creates a new wave amplifier."),
        EditorButtonType.click("Left-Click to &fCreate")),
    WAVES_WAVE_AMPLIFIER_CHANGE_VALUES(Material.COMPARATOR, "Values",
        EditorButtonType.current("Mob Level: &f" + Placeholders.WAVE_AMPLIFIER_VALUE_LEVEL + "\nMob Amount: &f" + Placeholders.WAVE_AMPLIFIER_VALUE_AMOUNT),
        EditorButtonType.info("Here you set amplifier values, that will be applied to a wave mobs."),
        EditorButtonType.note("Negative values are allowed!"),
        EditorButtonType.warn("Values have an incremental behavior!"),
        EditorButtonType.click("Left-Click to &fEdit Level\nRight-Click to &fEdit Amount")),
    WAVES_WAVE_AMPLIFIER_CHANGE_VALUE_AMOUNT,
    WAVES_WAVE_AMPLIFIER_CHANGE_VALUE_LEVEL,
    WAVES_WAVE_AMPLIFIER_CHANGE_TRIGGERS(Material.CLOCK, "Amplifier Game Triggers",
        EditorButtonType.current(Placeholders.WAVE_AMPLIFIER_TRIGGERS),
        EditorButtonType.info("A list of Game Triggers (Events) when this amplifier will be applied."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),

    REWARDS_CHANGE_RETAIN(Material.SHULKER_BOX, "Reward Retain",
        EditorButtonType.current("On Death: &f" + Placeholders.REWARD_MANAGER_RETAIN_ON_DEATH + "\nOn Leave: &f" + Placeholders.REWARD_MANAGER_RETAIN_ON_LEAVE),
        EditorButtonType.info("Sets if rewards a player have obtained during the game should be saved when player dies or leaves the arena until the final wave."),
        EditorButtonType.note("This setting will have effect on 'Late' rewards only."),
        EditorButtonType.click("Left-Click to &fToggle On Death\nRight-Click to &fToggle On Leave")),
    REWARD_OBJECT(Material.GOLD_INGOT, "Reward: &6" + Placeholders.REWARD_NAME,
        EditorButtonType.info("Target: &f" + Placeholders.REWARD_TARGET_TYPE + "\nChance: &f" + Placeholders.REWARD_CHANCE + "%"),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    REWARD_CREATE(Material.ANVIL, "Create Reward",
        EditorButtonType.info("Creates a new reward."),
        EditorButtonType.click("Left-Click to &fCreate")),
    REWARD_CHANGE_TRIGGERS(Material.CLOCK, "Reward Game Triggers",
        EditorButtonType.current(Placeholders.REWARD_TRIGGERS),
        EditorButtonType.info("A list of Game Triggers (Events) when this reward will be given."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    REWARD_CHANGE_NAME(Material.NAME_TAG, "Display Name",
        EditorButtonType.current(Placeholders.REWARD_NAME),
        EditorButtonType.info("This name will be displayed in messages, GUIs, holograms."),
        EditorButtonType.click("Left-Click to &fEdit")),
    REWARD_CHANGE_LATE(Material.IRON_DOOR, "Is Late",
        EditorButtonType.current("Is Late: &f" + Placeholders.REWARD_IS_LATE),
        EditorButtonType.info("Sets if the reward should be given after the game end or right in the game."),
        EditorButtonType.click("Left-Click to &fToggle")),
    REWARD_CHANGE_TARGET_TYPE(Material.ARMOR_STAND, "Target Type",
        EditorButtonType.current(Placeholders.REWARD_TARGET_TYPE),
        EditorButtonType.info("Sets the Target Type for this reward. Depends on a Target Type, a different player(s) will be affected by it."),
        EditorButtonType.note("GLOBAL Target Type has no effect there."),
        EditorButtonType.click("Left-Click to &fToggle")),
    REWARD_CHANGE_CHANCE(Material.COMPARATOR, "Chance",
        EditorButtonType.current(Placeholders.REWARD_CHANCE + "%"),
        EditorButtonType.info("Sets the chance for the reward to be given out."),
        EditorButtonType.click("Left-Click to &fEdit")),
    REWARD_CHANGE_COMMANDS(Material.COMMAND_BLOCK, "Commands",
        EditorButtonType.current(Placeholders.REWARD_COMMANDS),
        EditorButtonType.info("A list of commands, that will be executed when this reward is triggered."),
        EditorButtonType.click("Left-Click to &fAdd Command\nShift-Right to &fClear List")),
    REWARD_CHANGE_ITEMS(Material.CHEST, "Items",
        EditorButtonType.info("A list of items, that will be added to player inventories when this reward is triggered."),
        EditorButtonType.note("Simply put items there and use ESC to save & return"),
        EditorButtonType.click("Left-Click to &fNavigate")),

    SHOP_OPEN_CATEGORIES(Material.COMPASS, "Categories",
        EditorButtonType.info("A list of all the shop categories.\nThere you can create and configure categories and products."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    SHOP_CHANGE_ACTIVE(Material.REPEATER, "Is Active",
        EditorButtonType.current("Is Active: &f" + Placeholders.SHOP_MANAGER_IS_ACTIVE),
        EditorButtonType.info("Enables shop for the arena."),
        EditorButtonType.click("Left-Click to &fToggle")),
    SHOP_CHANGE_TRIGGERS_LOCKED(Material.CLOCK, "Shop Lock Triggers",
        EditorButtonType.current(Placeholders.SHOP_TRIGGERS_LOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the shop will be locked.\nLocked shop is not available to use until being unlocked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    SHOP_CHANGE_TRIGGERS_UNLOCKED(Material.CLOCK, "Shop Unlock Triggers",
        EditorButtonType.current(Placeholders.SHOP_TRIGGERS_UNLOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the shop will be unlocked.\nUnlocked shop is available to use until being locked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    SHOP_CHANGE_HIDE_OTHER_KIT_ITEMS(Material.ARMOR_STAND, "Hide Other Kit Items",
        EditorButtonType.current("Hide: &f" + Placeholders.SHOP_MANAGER_HIDE_OTHER_KIT_ITEMS),
        EditorButtonType.info("Sets if shop should hide products for players who does not met kit requirements."),
        EditorButtonType.click("Left-Click to &fToggle")),

    SHOP_CATEGORY_OBJECT(Material.COMPASS, "Category: &6" + Placeholders.SHOP_CATEGORY_NAME + " &7(&f" + Placeholders.SHOP_CATEGORY_ID + "&7)",
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    SHOP_CATEGORY_CREATE(Material.ANVIL, "Create Category",
        EditorButtonType.info("Creates a new shop category."),
        EditorButtonType.click("Left-Click to &fCreate")),
    SHOP_CATEGORY_CHANGE_NAME(Material.NAME_TAG, "Display Name",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_NAME),
        EditorButtonType.info("Sets the category display name. This name will be used in messages, GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fEdit")),
    SHOP_CATEGORY_CHANGE_DESCRIPTION(Material.MAP, "Category Description",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_DESCRIPTION),
        EditorButtonType.info("Sets the category description. It's used in GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fAdd Line\nRight-Click to &fClear")),
    SHOP_CATEGORY_CHANGE_ICON(Material.ITEM_FRAME, "Icon",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_ICON_TYPE),
        EditorButtonType.info("Sets display icon for the category.\nThis icon will be displayed in shop GUIs."),
        //EditorButtonType.note("Please make sure to preapre an item with display name and lore."),
        EditorButtonType.click("Drag & Drop to &fReplace")),
    SHOP_CATEGORY_CHANGE_ALLOWED_KITS(Material.DIAMOND_CHESTPLATE, "Allowed Kits",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_ALLOWED_KITS),
        EditorButtonType.info("A list of kits players with which can access the category."),
        EditorButtonType.note("If no kits are set, then anyone can access the category."),
        EditorButtonType.click("Left-Click to &fAdd Kit\nRight-Click to &fClear List")),
    SHOP_CATEGORY_CHANGE_TRIGGERS_LOCKED(Material.CLOCK, "Category Lock Triggers",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_TRIGGERS_LOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the category will be locked.\nLocked category is not available to use until being unlocked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    SHOP_CATEGORY_CHANGE_TRIGGERS_UNLOCKED(Material.CLOCK, "Category Unlock Triggers",
        EditorButtonType.current(Placeholders.SHOP_CATEGORY_TRIGGERS_UNLOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the category will be unlocked.\nUnlocked category is available to use until being locked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    SHOP_CATEGORY_CHANGE_PRODUCTS(Material.CHEST, "Products",
        EditorButtonType.info("A list of all the category products. There you can create and configure category products."),
        EditorButtonType.click("Left-Click to &fNavigate")),

    SHOP_PRODUCT_OBJECT(Material.PAPER, "Product: &6" + Placeholders.SHOP_PRODUCT_NAME + " &7(&f" + Placeholders.SHOP_PRODUCT_ID + "&7)",
        EditorButtonType.info("Price: &f" + Placeholders.SHOP_PRODUCT_PRICE),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    SHOP_PRODUCT_CREATE(Material.ANVIL, "Create Product",
        EditorButtonType.info("Creates a new product."),
        EditorButtonType.click("Left-Click to &fCreate")),
    SHOP_PRODUCT_CHANGE_NAME(Material.NAME_TAG, "Display Name",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_NAME),
        EditorButtonType.info("Sets the product display name. This name will be used in messages, GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fEdit")),
    SHOP_PRODUCT_CHANGE_DESCRIPTION(Material.MAP, "Product Description",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_DESCRIPTION),
        EditorButtonType.info("Sets the product description. It's used in GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fAdd Line\nRight-Click to &fClear")),
    SHOP_PRODUCT_CHANGE_CURRENCY(Material.EMERALD, "Currency",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_CURRENCY),
        EditorButtonType.info("Sets the product currency."),
        EditorButtonType.click("Left-Click to &fEdit")),
    SHOP_PRODUCT_CHANGE_PRICE(Material.GOLD_NUGGET, "Price",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_PRICE),
        EditorButtonType.info("Sets the product price."),
        EditorButtonType.click("Left-Click to &fEdit")),
    SHOP_PRODUCT_CHANGE_ICON(Material.ITEM_FRAME, "Icon",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_ICON_TYPE),
        EditorButtonType.info("Sets display icon for the product.\nThis icon will be displayed in shop GUIs."),
        //EditorButtonType.note("Please make sure to preapre an item with display name and lore."),
        EditorButtonType.click("Drag & Drop to &fReplace")),
    SHOP_PRODUCT_CHANGE_REQUIRED_KITS(Material.DIAMOND_CHESTPLATE, "Allowed Kits",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_APPLICABLE_KITS),
        EditorButtonType.info("A list of kits players with which can access the product."),
        EditorButtonType.note("If no kits are set, then anyone can access the product."),
        EditorButtonType.click("Left-Click to &fAdd Kit\nRight-Click to &fClear List")),
    SHOP_PRODUCT_CHANGE_ITEMS(Material.CHEST, "Items",
        EditorButtonType.info("A list of items, that will be added to player inventories when this product is purchased."),
        EditorButtonType.note("Simply put items there and use ESC to save & return"),
        EditorButtonType.click("Left-Click to &fNavigate")),
    SHOP_PRODUCT_CHANGE_COMMANDS(Material.COMMAND_BLOCK, "Commands",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_COMMANDS),
        EditorButtonType.info("A list of commands, that will be executed when this product is purchased."),
        EditorButtonType.click("Left-Click to &fAdd Command\nShift-Right to &fClear List")),
    SHOP_PRODUCT_CHANGE_TRIGGERS_LOCKED(Material.CLOCK, "Product Lock Triggers",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_TRIGGERS_LOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the product will be locked.\nLocked product is not available to purchase until being unlocked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),
    SHOP_PRODUCT_CHANGE_TRIGGERS_UNLOCKED(Material.CLOCK, "Product Unlock Triggers",
        EditorButtonType.current(Placeholders.SHOP_PRODUCT_TRIGGERS_LOCKED),
        EditorButtonType.info("A list of Game Triggers (Events) when the product will be unlocked.\nUnocked product is available to purchase until being locked back."),
        EditorButtonType.note("Detailed information about Game Triggers is on the plugin wiki."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear List")),

    SPOT_OBJECT(Material.CYAN_TERRACOTTA, "Spot: &6" + Placeholders.SPOT_NAME + " &7(&f" + Placeholders.SPOT_ID + "&7)",
        EditorButtonType.info("Spot Active: " + Placeholders.SPOT_ACTIVE),
        EditorButtonType.warn("Please ensure there are no problems with the spot:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fEdit\nShift+Right to &fDelete &7(No Undo)")),
    SPOT_CREATE(Material.ANVIL, "Create a Spot",
        EditorButtonType.info("Create a new spot for the arena."),
        EditorButtonType.click("Left-Click to &fCreate")),
    SPOT_SETUP_KIT(Material.GOLDEN_AXE, "Spot Setup Kit",
        EditorButtonType.info("A set of tools to setup the spot."),
        EditorButtonType.click("Left-Click to &fGet Kit")),
    SPOT_CHANGE_ACTIVE(Material.REPEATER, "Spot Active",
        EditorButtonType.current(Placeholders.SPOT_ACTIVE),
        EditorButtonType.info("Enables/Disables the spot."),
        EditorButtonType.warn("Please ensure there are no problems with the spot:\n" + Placeholders.GENERIC_PROBLEMS),
        EditorButtonType.click("Left-Click to &fToggle")),
    SPOT_CHANGE_NAME(Material.NAME_TAG, "Spot Name",
        EditorButtonType.current(Placeholders.SPOT_NAME),
        EditorButtonType.info("Sets the spot display name."),
        EditorButtonType.click("Left-Click to &fEdit")),
    SPOT_CHANGE_STATES(Material.ITEM_FRAME, "Spot States",
        EditorButtonType.info("List of spot states to be constructed during the game."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    SPOT_STATE_OBJECT(Material.ITEM_FRAME, "State: &6" + Placeholders.SPOT_STATE_ID,
        EditorButtonType.info("This state will be auto-constructed on following events:\n" + Placeholders.SPOT_STATE_TRIGGERS + "\nSimply build something inside the spot area and save it."),
        EditorButtonType.click("Left-Click to &fAdd Trigger\nRight-Click to &fClear Triggers\nShift-Left to &fBuild/Edit\nShift-Right to &fDelete &7(No Undo)")),
    SPOT_STATE_CHANGE_TRIGGERS,
    SPOT_STATE_CREATE(Material.ANVIL, "Create a State",
        EditorButtonType.info("Create a new spot state."),
        EditorButtonType.click("Left-Click to &fCreate")),

    KIT_OBJECT(Material.DIAMOND_CHESTPLATE, "Kit: &6" + Placeholders.KIT_NAME + " &7(&f" + Placeholders.KIT_ID + "&7)",
        EditorButtonType.info("Is Default: &f" + Placeholders.KIT_IS_DEFAULT),
        EditorButtonType.click("Left-Click to &fEdit\nShift-Right to &fDelete &7(No Undo)")),
    KIT_CREATE(Material.ANVIL, "Create Kit",
        EditorButtonType.info("Creates a new arena kit."),
        EditorButtonType.click("Left-Click to &fCreate")),
    KIT_CHANGE_NAME(Material.NAME_TAG, "Kit Display Name",
        EditorButtonType.current(Placeholders.KIT_NAME),
        EditorButtonType.info("Sets the kit display name. It's is used in messages, GUIs, signs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fEdit")),
    KIT_CHANGE_DESCRIPTION(Material.MAP, "Kit Description",
        EditorButtonType.current(Placeholders.KIT_DESCRIPTION),
        EditorButtonType.info("Sets the kit description. It's used in GUIs, holograms, etc."),
        EditorButtonType.click("Left-Click to &fAdd Line\nRight-Click to &fClear")),
    KIT_CHANGE_ICON(Material.ITEM_FRAME, "Kit Icon",
        EditorButtonType.info("Represents a kit icon used in Kit Selector and Kit Shop GUIs."),
        //EditorButtonType.note("Use an item with preset name and lore for best result."),
        EditorButtonType.click("Drag & Drop to &fReplace")),
    KIT_CHANGE_COMMANDS(Material.COMMAND_BLOCK, "Kit Commands",
        EditorButtonType.current(Placeholders.KIT_COMMANDS),
        EditorButtonType.info("A list of commands that will be executed when the kit is given to a player."),
        EditorButtonType.click("Left-Click to &fAdd Command\nRight-Click to &fClear List")),
    KIT_CHANGE_POTIONS(Material.BREWING_STAND, "Kit Potion Effects",
        EditorButtonType.current(Placeholders.KIT_POTION_EFFECTS),
        EditorButtonType.info("A list of Potion Effects, that will be permanently applied to the player."),
        EditorButtonType.click("Left-Click to &fAdd Effect\nRight-Click to &fClear List")),
    KIT_CHANGE_ARMOR(Material.ARMOR_STAND, "Kit Armor Content",
        EditorButtonType.info("A set of armors that will be equipped to a player."),
        EditorButtonType.note("Simply put items there and use ESC to save & return."),
        EditorButtonType.warn("Please, follow the order:\nBoots → Legs → Chest → Head → OffHand"),
        EditorButtonType.click("Left-Click to &fNavigate")),
    KIT_CHANGE_INVENTORY(Material.CHEST, "Kit Inventory",
        EditorButtonType.info("A list of items that will be added to a player's inventory."),
        EditorButtonType.note("Simply put items there and use ESC to save & return."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    KIT_CHANGE_PERMISSION(Material.REDSTONE_TORCH, "Permission Requirement",
        EditorButtonType.current("Is Required: &f" + Placeholders.KIT_IS_PERMISSION + "\nNode: &f" + Placeholders.KIT_PERMISSION),
        EditorButtonType.info("Sets if player will need a permission in order to use this kit."),
        EditorButtonType.click("Left-Click to &fToggle")),
    KIT_CHANGE_COST(Material.GOLD_NUGGET, "Kit Cost",
        EditorButtonType.current(Placeholders.KIT_COST),
        EditorButtonType.info("Sets the kit cost in Kit Shop."),
        EditorButtonType.note("Set this to 0 to make the kit available without purchase."),
        EditorButtonType.click("Left-Click to &fEdit")),
    KIT_CHANGE_DEFAULT(Material.REPEATER, "Kit Default",
        EditorButtonType.current("Is Default: &f" + Placeholders.KIT_IS_DEFAULT),
        EditorButtonType.info("Sets if this kit is default kit."),
        EditorButtonType.note("Default kit is used to be given to players, who didn't select it in the lobby until the game start."),
        EditorButtonType.click("Left-Click to &fToggle")),
    KIT_CHANGE_CURRENCY(Material.EMERALD, "Kit Currency",
        EditorButtonType.current(Placeholders.KIT_CURRENCY),
        EditorButtonType.info("Sets the currency used to purchase this kit."),
        EditorButtonType.click("Left-Click to &fEdit")),

    MOB_OBJECT(Material.CREEPER_SPAWN_EGG, "Mob: &6" + Placeholders.MOB_NAME + " &7(&f" + Placeholders.MOB_ID + "&7)",
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fDelete &7(No Undo)")),
    MOB_CREATE(Material.ANVIL, "Create Mob",
        EditorButtonType.info("Creates a new mob configuration."),
        EditorButtonType.click("Left-Click to &fCreate")),
    MOB_CHANGE_NAME(Material.NAME_TAG, "Mob Display Name",
        EditorButtonType.current("Name: &f" + Placeholders.MOB_NAME + "\nIs Visible: &f" + Placeholders.MOB_NAME_VISIBLE),
        EditorButtonType.info("Sets the mob display name and if this name is always visible (above head)."),
        EditorButtonType.click("Left-Click to &fEdit Name\nRight-Click to &fToggle Visibility")),
    MOB_CHANGE_ENTITY_TYPE(Material.ZOMBIE_SPAWN_EGG, "Mob Entity Type",
        EditorButtonType.current(Placeholders.MOB_ENTITY_TYPE),
        EditorButtonType.info("Sets the mob entity type."),
        EditorButtonType.click("Left-Click to &fEdit")),
    MOB_CHANGE_LEVEL(Material.EXPERIENCE_BOTTLE, "Mob Levels",
        EditorButtonType.current("Min: &f" + Placeholders.MOB_LEVEL_MIN + "\nMax: &f" + Placeholders.MOB_LEVEL_MAX),
        EditorButtonType.info("Sets the mob min. and max. level."),
        EditorButtonType.note("Mob level can be adjusted during the game with Wave Amplificators"),
        EditorButtonType.click("Left-Click to &fEdit Min\nRight-Click to &fEdit Max")),
    MOB_CHANGE_LEVEL_MIN,
    MOB_CHANGE_LEVEL_MAX,
    MOB_CHANGE_BOSSBAR(Material.COMPASS, "Mob Boss Bar",
        EditorButtonType.current("Enabled: &f" + Placeholders.MOB_BOSSBAR_ENABLED + "\nTitle: &f" + Placeholders.MOB_BOSSBAR_TITLE + "\nColor: &f" + Placeholders.MOB_BOSSBAR_COLOR + "\nStyle: &f" + Placeholders.MOB_BOSSBAR_STYLE),
        EditorButtonType.info("Sets if the mob should have a health Boss Bar with specified title."),
        EditorButtonType.click("Left-Click to &fToggle\nRight-Click to &fEdit Title\nShift-Left to &fToggle Color\nShift-Right to &fToggle Style")),
    MOB_CHANGE_BOSSBAR_TITLE,
    MOB_CHANGE_ATTRIBUTES(Material.APPLE, "Mob Attributes",
        EditorButtonType.current("Base:\n" + Placeholders.MOB_ATTRIBUTES_BASE + "\n&7\nPer Level:\n" + Placeholders.MOB_ATTRIBUTES_LEVEL),
        EditorButtonType.info("Sets the mob default and per-level attributes."),
        EditorButtonType.note("Base attribute with zero value means that default mob's attribute value won't be changed."),
        EditorButtonType.click("Left-Click to &fEdit Base\nRight-Click to &fEdit Per-Level\nShift-Left to &fClear All")),
    MOB_CHANGE_ATTRIBUTES_BASE,
    MOB_CHANGE_ATTRIBUTES_LEVEL,
    MOB_CHANGE_EQUIPMENT(Material.ARMOR_STAND, "Mob Equipment",
        EditorButtonType.info("Here you can set items that will be equipped to the mob on spawn."),
        EditorButtonType.note("Simply put items there and use ESC to save & return."),
        EditorButtonType.warn("Please, follow the order:\nBoots → Legs → Chest → Head → Main Hand → Off Hand"),
        EditorButtonType.click("Left-Click to &fNavigate")),
    MOB_CHANGE_STYLES(Material.CYAN_DYE, "Mob Styles",
        EditorButtonType.info("A list of settings applicable to the current mob. It can be color, type, age, etc."),
        EditorButtonType.click("Left-Click to &fNavigate")),
    MOB_STYLE_OBJECT(Material.NAME_TAG, "Style Type: &6" + Placeholders.MOB_STYLE_TYPE,
        EditorButtonType.current(Placeholders.MOB_STYLE_VALUE),
        EditorButtonType.click("Left-Click to &fEdit\nRight-Click to &fRemove"));

    private final Material     material;
    private       String       name;
    private       List<String> lore;

    ArenaEditorType() {
        this(Material.AIR, "", "");
    }

    ArenaEditorType(@NotNull Material material, @NotNull String name, @NotNull String... lores) {
        this.material = material;
        this.setName(name);
        this.setLore(EditorButtonType.fineLore(lores));
    }

    @NotNull
    @Override
    public Material getMaterial() {
        return material;
    }

    @NotNull
    public String getName() {
        return name;
    }

    public void setName(@NotNull String name) {
        this.name = StringUtil.color(name);
    }

    @NotNull
    public List<String> getLore() {
        return lore;
    }

    public void setLore(@NotNull List<String> lore) {
        this.lore = StringUtil.color(new ArrayList<>(lore));
    }
}
